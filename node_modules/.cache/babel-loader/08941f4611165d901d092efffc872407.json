{"ast":null,"code":"import { useRef as t, useEffect as o, forwardRef as e, useState as n, useImperativeHandle as r, createElement as a } from \"react\";\n\nfunction i() {\n  return (i = Object.assign || function (t) {\n    for (var o = 1; o < arguments.length; o++) {\n      var e = arguments[o];\n\n      for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);\n    }\n\n    return t;\n  }).apply(this, arguments);\n}\n\nvar c = function () {};\n\nfunction l(t, o) {\n  return Math.random() * (o - t + 1) + t;\n}\n\nfunction s(t, o) {\n  return Math.floor(l(t, o));\n}\n\nvar u = e(function (e, u) {\n  var d = e.progress,\n      f = e.height,\n      v = void 0 === f ? 2 : f,\n      h = e.className,\n      p = void 0 === h ? \"\" : h,\n      m = e.color,\n      b = void 0 === m ? \"red\" : m,\n      g = e.background,\n      y = void 0 === g ? \"transparent\" : g,\n      w = e.onLoaderFinished,\n      x = e.transitionTime,\n      S = void 0 === x ? 300 : x,\n      k = e.loaderSpeed,\n      M = void 0 === k ? 500 : k,\n      N = e.waitingTime,\n      R = void 0 === N ? 1e3 : N,\n      T = e.shadow,\n      Y = void 0 === T || T,\n      I = e.containerStyle,\n      O = void 0 === I ? {} : I,\n      j = e.style,\n      P = void 0 === j ? {} : j,\n      V = e.shadowStyle,\n      z = void 0 === V ? {} : V,\n      C = e.containerClassName,\n      F = void 0 === C ? \"\" : C,\n      L = t(!1),\n      q = n(0),\n      A = q[0],\n      B = q[1],\n      D = n({\n    active: !1,\n    startingValue: 20,\n    refreshRate: 1e3\n  }),\n      E = D[0],\n      G = D[1],\n      H = n(!1),\n      J = H[0],\n      K = H[1],\n      Q = n({\n    active: !1,\n    value: 20\n  }),\n      U = Q[0],\n      W = Q[1],\n      X = {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    height: v,\n    background: y,\n    zIndex: 99999999999,\n    width: \"100%\"\n  },\n      Z = {\n    boxShadow: \"0 0 10px \" + b + \", 0 0 10px \" + b,\n    width: \"5%\",\n    opacity: 1,\n    position: \"absolute\",\n    height: \"100%\",\n    transition: \"all \" + M + \"ms ease\",\n    transform: \"rotate(3deg) translate(0px, -4px)\",\n    left: \"-10rem\"\n  },\n      $ = n({\n    height: \"100%\",\n    background: b,\n    transition: \"all \" + M + \"ms ease\",\n    width: \"0%\"\n  }),\n      _ = $[0],\n      tt = $[1],\n      ot = n(Z),\n      et = ot[0],\n      nt = ot[1];\n  o(function () {\n    return L.current = !0, function () {\n      L.current = !1;\n    };\n  }, []), r(u, function () {\n    return {\n      continuousStart: function (t, o) {\n        if (void 0 === o && (o = 1e3), !U.active) if (J) console.warn(\"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\");else {\n          var e = t || s(10, 20);\n          G({\n            active: !0,\n            refreshRate: o,\n            startingValue: t\n          }), B(e), ct(e);\n        }\n      },\n      staticStart: function (t) {\n        if (!E.active) if (J) console.warn(\"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\");else {\n          var o = t || s(30, 50);\n          W({\n            active: !0,\n            value: o\n          }), B(o), ct(o);\n        }\n      },\n      complete: function () {\n        J ? console.warn(\"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\") : (B(100), ct(100));\n      }\n    };\n  }), o(function () {\n    tt(i({}, _, {\n      background: b\n    })), nt(i({}, et, {\n      boxShadow: \"0 0 10px \" + b + \", 0 0 5px \" + b\n    }));\n  }, [b]), o(function () {\n    if (u) {\n      if (u && void 0 !== d) return void console.warn('react-top-loading-bar: You can\\'t use both controlling by props and ref methods to control the bar! Please use only props or only ref methods! Ref methods will override props if \"ref\" property is available.');\n      ct(A), K(!1);\n    } else d && ct(d), K(!0);\n  }, [d]);\n\n  var rt,\n      at,\n      it,\n      ct = function t(o) {\n    o >= 100 ? (tt(i({}, _, {\n      width: \"100%\"\n    })), Y && nt(i({}, et, {\n      left: o - 10 + \"%\"\n    })), setTimeout(function () {\n      L.current && (tt(i({}, _, {\n        opacity: 0,\n        width: \"100%\",\n        transition: \"all \" + S + \"ms ease-out\",\n        color: b\n      })), setTimeout(function () {\n        L.current && (E.active && (G(i({}, E, {\n          active: !1\n        })), B(0), t(0)), U.active && (W(i({}, U, {\n          active: !1\n        })), B(0), t(0)), w && w(), B(0), t(0));\n      }, S));\n    }, R)) : (tt(function (t) {\n      return i({}, t, {\n        width: o + \"%\",\n        opacity: 1,\n        transition: o > 0 ? \"all \" + M + \"ms ease\" : \"\"\n      });\n    }), Y && nt(i({}, et, {\n      left: o - 5.5 + \"%\",\n      transition: o > 0 ? \"all \" + M + \"ms ease\" : \"\"\n    })));\n  };\n\n  return rt = function () {\n    var t = l(Math.min(10, (100 - A) / 5), Math.min(20, (100 - A) / 3));\n    A + t < 100 && (B(A + t), ct(A + t));\n  }, at = E.active ? E.refreshRate : null, it = t(c), o(function () {\n    it.current = rt;\n  }), o(function () {}, [void 0]), o(function () {\n    if (null !== at && !1 !== at) {\n      var t = setInterval(function () {\n        return it.current();\n      }, at);\n      return function () {\n        return clearInterval(t);\n      };\n    }\n  }, [at]), a(\"div\", {\n    className: F,\n    style: i({}, X, O)\n  }, a(\"div\", {\n    className: p,\n    style: i({}, _, P)\n  }, Y ? a(\"div\", {\n    style: i({}, et, z)\n  }) : null));\n});\nexport default u;","map":{"version":3,"mappings":"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","names":["noop","randomValue","min","max","Math","random","randomInt","floor","LoadingBar","forwardRef","ref","progress","height","f","h","className","m","color","g","background","onLoaderFinished","transitionTime","x","k","loaderSpeed","N","waitingTime","T","shadow","containerStyle","I","j","style","V","shadowStyle","shadowStyleProp","C","containerClassName","isMounted","useRef","q","useState","localProgress","localProgressSet","active","startingValue","refreshRate","pressedContinuous","setPressedContinuous","usingProps","setUsingProps","value","pressedStaticStart","setStaticStartPressed","loaderContainerStyle","position","top","left","zIndex","width","initialShadowStyles","boxShadow","opacity","transition","transform","$","loaderStyle","loaderStyleSet","shadowStyleSet","useEffect","current","useImperativeHandle","continuousStart","console","warn","val","checkIfFull","staticStart","complete","undefined","callback","delay","savedCallback","_progress","setTimeout","_loaderStyle","immediate","id","setInterval","clearInterval","React"],"sources":["/Users/bab0007/Desktop/Games- code/portfolio/node_modules/@weblif/react-top-loading-bar/src/useInterval.ts","/Users/bab0007/Desktop/Games- code/portfolio/node_modules/@weblif/react-top-loading-bar/src/utils.ts","/Users/bab0007/Desktop/Games- code/portfolio/node_modules/@weblif/react-top-loading-bar/src/index.tsx"],"sourcesContent":["import { useEffect, useRef } from 'react'\n\n/** keep typescript happy */\nconst noop = () => {}\n\nexport function useInterval(\n    callback: () => void,\n    delay: number | null | false,\n    immediate?: boolean\n) {\n    const savedCallback = useRef(noop)\n\n    // Remember the latest callback.\n    useEffect(() => {\n        savedCallback.current = callback\n    })\n\n    // Execute callback if immediate is set.\n    useEffect(() => {\n        if (!immediate) return\n        if (delay === null || delay === false) return\n        savedCallback.current()\n    }, [immediate])\n\n    // Set up the interval.\n    useEffect(() => {\n        if (delay === null || delay === false) return undefined\n        const tick = () => savedCallback.current()\n        const id = setInterval(tick, delay)\n        return () => clearInterval(id)\n    }, [delay])\n}\n\nexport default useInterval\n","export function randomValue(min: number, max: number): number {\n    return Math.random() * (max - min + 1) + min\n}\n\nexport function randomInt(min: number, max: number): number {\n    return Math.floor(randomValue(min, max))\n}\n","import * as React from 'react'\nimport {\n    CSSProperties,\n    useEffect,\n    useState,\n    forwardRef,\n    useImperativeHandle,\n    useRef,\n} from 'react'\nimport { useInterval } from './useInterval'\nimport { randomInt, randomValue } from './utils'\n\ntype IProps = {\n    progress?: number\n    color?: string\n    shadow?: boolean\n    background?: string\n    height?: number\n    onLoaderFinished?: () => void\n    className?: string\n    containerClassName?: string\n    loaderSpeed?: number\n    transitionTime?: number\n    waitingTime?: number\n    style?: CSSProperties\n    containerStyle?: CSSProperties\n    shadowStyle?: CSSProperties\n}\n\nexport type LoadingBarRef = {\n    continuousStart: (startingValue?: number, refreshRate?: number) => void\n    staticStart: (startingValue?: number) => void\n    complete: () => void\n}\n\nconst LoadingBar = forwardRef<LoadingBarRef, IProps>(\n    (\n        {\n            progress,\n            height = 2,\n            className = '',\n            color = 'red',\n            background = 'transparent',\n            onLoaderFinished,\n            transitionTime = 300,\n            loaderSpeed = 500,\n            waitingTime = 1000,\n            shadow = true,\n            containerStyle = {},\n            style = {},\n            shadowStyle: shadowStyleProp = {},\n            containerClassName = '',\n        },\n        ref\n    ) => {\n        const isMounted = useRef(false)\n        const [localProgress, localProgressSet] = useState<number>(0)\n        const [pressedContinuous, setPressedContinuous] = useState<{\n            active: boolean\n            startingValue: number\n            refreshRate: number\n        }>({ active: false, startingValue: 20, refreshRate: 1000 })\n        const [usingProps, setUsingProps] = useState(false)\n\n        const [pressedStaticStart, setStaticStartPressed] = useState<{\n            active: boolean\n            value: number\n        }>({ active: false, value: 20 })\n\n        const initialLoaderStyle: CSSProperties = {\n            height: '100%',\n            background: color,\n            transition: `all ${loaderSpeed}ms ease`,\n            width: '0%',\n        }\n\n        const loaderContainerStyle: CSSProperties = {\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            height,\n            background,\n            zIndex: 99999999999,\n            width: 100 + '%',\n        }\n\n        const initialShadowStyles: CSSProperties = {\n            boxShadow: `0 0 10px ${color}, 0 0 10px ${color}`,\n            width: '5%',\n            opacity: 1,\n            position: 'absolute',\n            height: '100%',\n            transition: `all ${loaderSpeed}ms ease`,\n            transform: 'rotate(3deg) translate(0px, -4px)',\n            left: '-10rem',\n        }\n\n        const [loaderStyle, loaderStyleSet] =\n            useState<CSSProperties>(initialLoaderStyle)\n        const [shadowStyle, shadowStyleSet] =\n            useState<CSSProperties>(initialShadowStyles)\n\n        useEffect(() => {\n            isMounted.current = true\n            return () => {\n                isMounted.current = false\n            }\n        }, [])\n\n        useImperativeHandle(ref, () => ({\n            continuousStart(startingValue: number, refreshRate: number = 1000) {\n                if (pressedStaticStart.active) return\n                if (usingProps) {\n                    console.warn(\n                        \"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\"\n                    )\n                    return\n                }\n\n                const val = startingValue || randomInt(10, 20)\n                setPressedContinuous({\n                    active: true,\n                    refreshRate,\n                    startingValue,\n                })\n                localProgressSet(val)\n                checkIfFull(val)\n            },\n            staticStart(startingValue?: number) {\n                if (pressedContinuous.active) return\n                if (usingProps) {\n                    console.warn(\n                        \"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\"\n                    )\n                    return\n                }\n\n                const val = startingValue || randomInt(30, 50)\n                setStaticStartPressed({\n                    active: true,\n                    value: val,\n                })\n                localProgressSet(val)\n                checkIfFull(val)\n            },\n            complete() {\n                if (usingProps) {\n                    console.warn(\n                        \"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\"\n                    )\n                    return\n                }\n                localProgressSet(100)\n                checkIfFull(100)\n            },\n        }))\n\n        useEffect(() => {\n            loaderStyleSet({\n                ...loaderStyle,\n                background: color,\n            })\n\n            shadowStyleSet({\n                ...shadowStyle,\n                boxShadow: `0 0 10px ${color}, 0 0 5px ${color}`,\n            })\n        }, [color])\n\n        useEffect(() => {\n            if (ref) {\n                if (ref && progress !== undefined) {\n                    console.warn(\n                        'react-top-loading-bar: You can\\'t use both controlling by props and ref methods to control the bar! Please use only props or only ref methods! Ref methods will override props if \"ref\" property is available.'\n                    )\n                    return\n                }\n                checkIfFull(localProgress)\n                setUsingProps(false)\n            } else {\n                if (progress) checkIfFull(progress)\n\n                setUsingProps(true)\n            }\n        }, [progress])\n\n        const checkIfFull = (_progress: number) => {\n            if (_progress >= 100) {\n                // now it should wait a little bit\n                loaderStyleSet({\n                    ...loaderStyle,\n                    width: '100%',\n                })\n                if (shadow) {\n                    shadowStyleSet({\n                        ...shadowStyle,\n                        left: _progress - 10 + '%',\n                    })\n                }\n\n                setTimeout(() => {\n                    if (!isMounted.current) {\n                        return\n                    }\n                    // now it can fade out\n                    loaderStyleSet({\n                        ...loaderStyle,\n                        opacity: 0,\n                        width: '100%',\n                        transition: `all ${transitionTime}ms ease-out`,\n                        color: color,\n                    })\n\n                    setTimeout(() => {\n                        if (!isMounted.current) {\n                            return\n                        }\n                        // here we wait for it to fade\n                        if (pressedContinuous.active) {\n                            // if we have continous loader just ending, we kill it and reset it\n                            setPressedContinuous({\n                                ...pressedContinuous,\n                                active: false,\n                            })\n                            localProgressSet(0)\n                            checkIfFull(0)\n                        }\n\n                        if (pressedStaticStart.active) {\n                            setStaticStartPressed({\n                                ...pressedStaticStart,\n                                active: false,\n                            })\n                            localProgressSet(0)\n                            checkIfFull(0)\n                        }\n\n                        if (onLoaderFinished) onLoaderFinished()\n                        localProgressSet(0)\n                        checkIfFull(0)\n                    }, transitionTime)\n                }, waitingTime)\n            } else {\n                loaderStyleSet((_loaderStyle) => {\n                    return {\n                        ..._loaderStyle,\n                        width: _progress + '%',\n                        opacity: 1,\n                        transition:\n                            _progress > 0 ? `all ${loaderSpeed}ms ease` : '',\n                    }\n                })\n\n                if (shadow) {\n                    shadowStyleSet({\n                        ...shadowStyle,\n                        left: _progress - 5.5 + '%',\n                        transition:\n                            _progress > 0 ? `all ${loaderSpeed}ms ease` : '',\n                    })\n                }\n            }\n        }\n\n        useInterval(\n            () => {\n                const random = randomValue(\n                    Math.min(10, (100 - localProgress) / 5),\n                    Math.min(20, (100 - localProgress) / 3)\n                )\n\n                if (localProgress + random < 100) {\n                    localProgressSet(localProgress + random)\n                    checkIfFull(localProgress + random)\n                }\n            },\n            pressedContinuous.active ? pressedContinuous.refreshRate : null\n        )\n\n        return (\n            <div\n                className={containerClassName}\n                style={{ ...loaderContainerStyle, ...containerStyle }}\n            >\n                <div className={className} style={{ ...loaderStyle, ...style }}>\n                    {shadow ? (\n                        <div style={{ ...shadowStyle, ...shadowStyleProp }} />\n                    ) : null}\n                </div>\n            </div>\n        )\n    }\n)\n\nexport { IProps }\n\nexport default LoadingBar\n"]},"metadata":{},"sourceType":"module"}